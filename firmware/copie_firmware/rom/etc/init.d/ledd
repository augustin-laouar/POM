#!/bin/sh /etc/rc.common

START=12

led_green_gpio="0"
led_red_gpio="0"
led_green_active_low="0"
led_red_active_low="0"

PARAM_NUM=4

insmod_led()
{
	CFG_FILE="/tmp/buildroot_cfg.ini"
	try_cnt=0
	while [ ! -f $CFG_FILE ]; do
		echo "ispfile is not ready, wait..."
		sleep 1
		let try_cnt++
		if [ $try_cnt == 3 ]
		then
		    echo "led config is not ready, use default!!!"
		    CFG_FILE="/data/cfg/buildroot_cfg.ini"
			break
		fi
	done

	if [ -f $CFG_FILE ]; then
		param_cnt=0
		while read line
		do
			if (!(echo "$line" | grep -n '^;' > /dev/null) && (echo "$line" | grep -n '=' > /dev/null)); then
			    name=${line%=*}
			    value=${line#*=}
			    if [ $name == "CONFIG_LED_GREEN_GPIO" ]; then
			    	led_green_gpio=$value
			    	echo "led_green_gpio = $led_green_gpio"
			    	let param_cnt++
			    fi
			    if [ $name == "CONFIG_LED_RED_GPIO" ]; then
			    	led_red_gpio=$value
			    	echo "led_red_gpio = $led_red_gpio"
			    	let param_cnt++
			    fi
			    if [ $name == "CONFIG_LED_GREEN_GPIO_ACTIVE_LOW" ]; then
			    	led_green_active_low=$value
			    	echo "led_green_active_low = $led_green_active_low"
			    	let param_cnt++
			    fi
			    if [ $name == "CONFIG_LED_RED_GPIO_ACTIVE_LOW" ]; then
			    	led_red_active_low=$value
			    	echo "led_red_active_low = $led_red_active_low"
			    	let param_cnt++
			    fi
			    if [ $param_cnt == $PARAM_NUM ]
				then
					break
				fi
		    fi
		done < $CFG_FILE

		osrelease=`cat /proc/sys/kernel/osrelease |awk -F '_' '{print $1}'`
		echo "===insmod /lib/modules/$osrelease/gpio_leds.ko==="
		insmod /lib/modules/$osrelease/gpio_leds.ko \
		LED_GREEN_GPIO=$led_green_gpio \
		LED_RED_GPIO=$led_red_gpio \
		LED_GREEN_GPIO_ACTIVE_LOW=$led_green_active_low \
		LED_RED_GPIO_ACTIVE_LOW=$led_red_active_low \
		1>/dev/null 2>&1
	else
		echo "====================Warning===================="
		echo "==  LED_GPIO was not written to flash yet!   =="
		echo "==============================================="
	fi
}

start() {
	rm /tmp/.led_server 1>/dev/null 2>&1
	insmod_led

	try_cnt=0
	while [ ! -d "/sys/class/leds/led-red/" ]; do
		echo "ledd kernel module is not ready, wait..."
		sleep 1
		let try_cnt++
		if [ $try_cnt == 5 ]
		then
			break
		fi
	done

	/usr/bin/ledd &
}

stop() {
	kill -9 `pgrep /usr/bin/ledd`
}